#------------------------------------------------------------------------------
# written by: mcdaniel
# date: july-2022
#
# usage: k8s HorizontalPodAutoscaler for the specified pod in the currently selected
#        context and namespace. If the pod deployment exists then sets the scaling
#        policy. Otherwise fails gracefully.
#
# see: https://kubernetes.io/docs/tasks/run-application/horizontal-pod-autoscale-walkthrough/
#------------------------------------------------------------------------------
name: Set the horizontal scaling policy for a pod
branding:
  icon: 'cloud'
  color: 'orange'
inputs:
  pod-name:
    description: 'The name of the pod. Examples: lms, lms-worker, cms, cms-worker, discovery, notes, mfe'
    required: true
    type: string
  cpu-threshold:
    description: 'Average maximum cpu utilization percentage per pod to be maintained. Default is 50'
    required: false
    type: number
    default: 50
  minimum-pods:
    description: 'The lower limit for the number of pods that can be set by the autoscaler. Default is 1'
    required: false
    type: number
    default: 1
  maximum-pods:
    description: 'The upper limit for the number of pods that can be set by the autoscaler. Default is 10'
    required: false
    type: number
    default: 10

runs:
  using: "composite"
  steps:
    - name: Set HorizontalPodAutoscaler policy
      shell: bash
      continue-on-error: true
      run:  |-
        kubectl autoscale deployment ${{ inputs.pod-name }} --cpu-percent=${{ inputs.cpu-threshold }} --min=${{ inputs.minimum-pods }} --max=${{ inputs.maximum-pods }}
